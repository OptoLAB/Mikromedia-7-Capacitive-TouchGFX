/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef NRFVIEWBASE_HPP
#define NRFVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/nrf_screen/NRFPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class NRFViewBase : public touchgfx::View<NRFPresenter>
{
public:
    NRFViewBase();
    virtual ~NRFViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void btnShiftClicked()
    {
        // Override and implement this function in NRF
    }

    virtual void btnBackClicked()
    {
        // Override and implement this function in NRF
    }

    virtual void btnSwitchClicked()
    {
        // Override and implement this function in NRF
    }

    virtual void btnSpaceClicked()
    {
        // Override and implement this function in NRF
    }

    virtual void btnEnterClicked()
    {
        // Override and implement this function in NRF
    }

    virtual void btnClearClicked()
    {
        // Override and implement this function in NRF
    }

    virtual void btnSendClicked()
    {
        // Override and implement this function in NRF
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box1;
    touchgfx::BoxWithBorder boxWithBorder2;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::Image image1;
    touchgfx::ButtonWithIcon buttonClose;
    touchgfx::TextArea textArea1;
    touchgfx::ButtonWithIcon btnShift;
    touchgfx::ButtonWithIcon btnBackspace;
    touchgfx::ButtonWithLabel btnSwitch;
    touchgfx::ButtonWithLabel btnEnter;
    touchgfx::ButtonWithLabel btnSpace;
    touchgfx::ButtonWithIcon btnSend;
    touchgfx::ButtonWithIcon btnClear;
    touchgfx::ScrollableContainer scrollableContainer1;
    touchgfx::TextAreaWithOneWildcard Message;

    /*
     * Wildcard Buffers
     */
    static const uint16_t MESSAGE_SIZE = 128;
    touchgfx::Unicode::UnicodeChar MessageBuffer[MESSAGE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<NRFViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // NRFVIEWBASE_HPP
