/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TEMPVIEWBASE_HPP
#define TEMPVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/temp_screen/TEMPPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/containers/progress_indicators/LineProgress.hpp>

class TEMPViewBase : public touchgfx::View<TEMPPresenter>
{
public:
    TEMPViewBase();
    virtual ~TEMPViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box1;
    touchgfx::Box box2;
    touchgfx::Image image1;
    touchgfx::ButtonWithIcon buttonClose;
    touchgfx::TextArea textArea1;
    touchgfx::TextAreaWithTwoWildcards textAreaExt;
    touchgfx::Circle circle1;
    touchgfx::PainterRGB565 circle1Painter;
    touchgfx::LineProgress tempProgressInt;
    touchgfx::PainterRGB565 tempProgressIntPainter;
    touchgfx::Circle circle2;
    touchgfx::PainterRGB565 circle2Painter;
    touchgfx::TextArea textArea3;
    touchgfx::Box box3;
    touchgfx::Circle circle3;
    touchgfx::PainterRGB565 circle3Painter;
    touchgfx::LineProgress tempProgressExt;
    touchgfx::PainterRGB565 tempProgressExtPainter;
    touchgfx::Circle circle4;
    touchgfx::PainterRGB565 circle4Painter;
    touchgfx::TextArea textArea4;
    touchgfx::TextArea textArea5;
    touchgfx::TextArea textArea6;
    touchgfx::TextAreaWithTwoWildcards textAreaInt;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREAEXTBUFFER1_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textAreaExtBuffer1[TEXTAREAEXTBUFFER1_SIZE];
    static const uint16_t TEXTAREAEXTBUFFER2_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textAreaExtBuffer2[TEXTAREAEXTBUFFER2_SIZE];
    static const uint16_t TEXTAREAINTBUFFER1_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textAreaIntBuffer1[TEXTAREAINTBUFFER1_SIZE];
    static const uint16_t TEXTAREAINTBUFFER2_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textAreaIntBuffer2[TEXTAREAINTBUFFER2_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<TEMPViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // TEMPVIEWBASE_HPP
