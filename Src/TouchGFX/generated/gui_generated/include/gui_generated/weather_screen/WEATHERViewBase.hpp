/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef WEATHERVIEWBASE_HPP
#define WEATHERVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/weather_screen/WEATHERPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class WEATHERViewBase : public touchgfx::View<WEATHERPresenter>
{
public:
    WEATHERViewBase();
    virtual ~WEATHERViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void updateWeather()
    {
        // Override and implement this function in WEATHER
    }

    virtual void sendInfoViaCLI()
    {
        // Override and implement this function in WEATHER
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box1;
    touchgfx::Image image1;
    touchgfx::ButtonWithIcon buttonClose;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::TextArea textArea1;
    touchgfx::Image imageWeather;
    touchgfx::TextArea textAreaInfo;
    touchgfx::TextAreaWithOneWildcard textAreaCity;
    touchgfx::TextAreaWithOneWildcard textAreaTemp;
    touchgfx::TextAreaWithOneWildcard textAreaWeather;
    touchgfx::TextAreaWithOneWildcard textAreaStatus;
    touchgfx::TextArea textAreaUnit;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > > buttonRefresh;
    touchgfx::TextArea textAreaCurrent;
    touchgfx::TextButtonStyle< touchgfx::IconButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > > buttonDebug;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREACITY_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textAreaCityBuffer[TEXTAREACITY_SIZE];
    static const uint16_t TEXTAREATEMP_SIZE = 6;
    touchgfx::Unicode::UnicodeChar textAreaTempBuffer[TEXTAREATEMP_SIZE];
    static const uint16_t TEXTAREAWEATHER_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textAreaWeatherBuffer[TEXTAREAWEATHER_SIZE];
    static const uint16_t TEXTAREASTATUS_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textAreaStatusBuffer[TEXTAREASTATUS_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<WEATHERViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<WEATHERViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // WEATHERVIEWBASE_HPP
