/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef PWRVIEWBASE_HPP
#define PWRVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/pwr_screen/PWRPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/RadioButton.hpp>
#include <touchgfx/containers/progress_indicators/CircleProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/containers/progress_indicators/TextProgress.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/RadioButtonGroup.hpp>

class PWRViewBase : public touchgfx::View<PWRPresenter>
{
public:
    PWRViewBase();
    virtual ~PWRViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box1;
    touchgfx::Image image1;
    touchgfx::ButtonWithIcon buttonClose;
    touchgfx::TextArea textArea1;
    touchgfx::RadioButton radioButtonDC;
    touchgfx::RadioButton radioButtonBAT;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea3;
    touchgfx::CircleProgress batProgress;
    touchgfx::PainterRGB565 batProgressPainter;
    touchgfx::TextArea textArea4;
    touchgfx::TextArea textArea5;
    touchgfx::TextArea textArea6;
    touchgfx::TextProgress batTextProgress;
    touchgfx::TextAreaWithTwoWildcards textArea7;
    touchgfx::Image imageChargeStatus;
    touchgfx::RadioButtonGroup<1> radioButtonGroup1;
    touchgfx::RadioButtonGroup<1> radioButtonGroup2;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA7BUFFER1_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textArea7Buffer1[TEXTAREA7BUFFER1_SIZE];
    static const uint16_t TEXTAREA7BUFFER2_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textArea7Buffer2[TEXTAREA7BUFFER2_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<PWRViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // PWRVIEWBASE_HPP
