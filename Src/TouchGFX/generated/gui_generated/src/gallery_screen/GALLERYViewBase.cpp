/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/gallery_screen/GALLERYViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

GALLERYViewBase::GALLERYViewBase() :
    buttonCallback(this, &GALLERYViewBase::buttonCallbackHandler)
{

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(87, 181, 167));

    box3.setPosition(15, 101, 755, 366);
    box3.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    box3.setAlpha(80);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_TOPBAR_TOPBAR_BG_800X480PX_ID));

    buttonClose.setXY(740, 1);
    buttonClose.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID));
    buttonClose.setIconXY(16, 16);
    buttonClose.setAction(buttonCallback);

    textArea1.setXY(15, 17);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID32));

    boxImage.setPosition(157, 177, 486, 278);
    boxImage.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    buttonNext.setXY(681, 286);
    buttonNext.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_NEXT_ARROW_32_ID));
    buttonNext.setIconXY(22, 15);
    buttonNext.setAction(buttonCallback);

    buttonPrevious.setXY(49, 286);
    buttonPrevious.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_BACK_ARROW_32_ID));
    buttonPrevious.setIconXY(22, 15);
    buttonPrevious.setAction(buttonCallback);

    textArea2.setXY(21, 107);
    textArea2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    textArea2Buffer[0] = 0;
    textArea2.setWildcard(textArea2Buffer);
    textArea2.resizeToCurrentText();
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID34));

    box2.setPosition(157, 177, 486, 278);
    box2.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    box2.setAlpha(0);

    add(box1);
    add(box3);
    add(image1);
    add(buttonClose);
    add(textArea1);
    add(boxImage);
    add(buttonNext);
    add(buttonPrevious);
    add(textArea2);
    add(box2);
}

void GALLERYViewBase::setupScreen()
{

}

void GALLERYViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonClose)
    {
        //Interaction1
        //When buttonClose clicked change screen to MAIN_MENU
        //Go to MAIN_MENU with no screen transition
        application().gotoMAIN_MENUScreenNoTransition();
    }
    else if (&src == &buttonNext)
    {
        //Interaction2
        //When buttonNext clicked call virtual function
        //Call loadNext
        loadNext();
    }
    else if (&src == &buttonPrevious)
    {
        //Interaction3
        //When buttonPrevious clicked call virtual function
        //Call loadPrevious
        loadPrevious();
    }
}
