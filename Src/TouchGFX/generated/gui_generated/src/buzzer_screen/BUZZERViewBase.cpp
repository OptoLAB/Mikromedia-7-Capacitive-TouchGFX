/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/buzzer_screen/BUZZERViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

BUZZERViewBase::BUZZERViewBase() :
    buttonCallback(this, &BUZZERViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &BUZZERViewBase::flexButtonCallbackHandler),
    sliderValueChangedCallback(this, &BUZZERViewBase::sliderValueChangedCallbackHandler)
{

    box1.setPosition(0, 2, 800, 480);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(32, 128, 250));

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_TOPBAR_TOPBAR_BG_800X480PX_ID));

    buttonClose.setXY(740, 1);
    buttonClose.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID));
    buttonClose.setIconXY(16, 16);
    buttonClose.setAction(buttonCallback);

    textArea1.setXY(15, 17);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID516));

    sliderVolume.setXY(15, 87);
    sliderVolume.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_DARK_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_EDGE_KNOB_ID));
    sliderVolume.setupHorizontalSlider(2, 22, 11, 0, 622);
    sliderVolume.setValueRange(0, 5);
    sliderVolume.setValue(0);
    sliderVolume.setNewValueCallback(sliderValueChangedCallback);

    sliderTone.setXY(15, 181);
    sliderTone.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_DARK_SLIDER_HORIZONTAL_SMALL_INDICATORS_SLIDER_HORIZONTAL_SMALL_ROUND_EDGE_KNOB_ID));
    sliderTone.setupHorizontalSlider(2, 22, 11, 0, 622);
    sliderTone.setValueRange(4, 50);
    sliderTone.setValue(4);
    sliderTone.setNewValueCallback(sliderValueChangedCallback);

    buttonStart.setXY(715, 87);
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_PLAY_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_PLAY_32_ID));
    buttonStart.setIconXY(19, 14);
    buttonStart.setAction(buttonCallback);

    buttonStop.setXY(715, 182);
    buttonStop.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_STOP_32_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_STOP_32_ID));
    buttonStop.setIconXY(14, 14);
    buttonStop.setAction(buttonCallback);

    textArea2.setXY(305, 67);
    textArea2.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID517));

    textArea3.setXY(313, 162);
    textArea3.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID518));

    keyboard.setPosition(9, 292, 776, 190);

    buttonC.setBoxWithBorderPosition(0, 0, 110, 190);
    buttonC.setBorderSize(1);
    buttonC.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    buttonC.setPosition(0, 0, 110, 190);
    keyboard.add(buttonC);

    buttonD.setBoxWithBorderPosition(0, 0, 110, 190);
    buttonD.setBorderSize(1);
    buttonD.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    buttonD.setPosition(111, 0, 110, 190);
    keyboard.add(buttonD);

    buttonE.setBoxWithBorderPosition(0, 0, 110, 190);
    buttonE.setBorderSize(1);
    buttonE.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    buttonE.setPosition(222, 0, 110, 190);
    keyboard.add(buttonE);

    buttonF.setBoxWithBorderPosition(0, 0, 110, 190);
    buttonF.setBorderSize(1);
    buttonF.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    buttonF.setPosition(333, 0, 110, 190);
    keyboard.add(buttonF);

    buttonG.setBoxWithBorderPosition(0, 0, 110, 190);
    buttonG.setBorderSize(1);
    buttonG.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    buttonG.setPosition(444, 0, 110, 190);
    keyboard.add(buttonG);

    buttonA.setBoxWithBorderPosition(0, 0, 110, 190);
    buttonA.setBorderSize(1);
    buttonA.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    buttonA.setPosition(555, 0, 110, 190);
    keyboard.add(buttonA);

    buttonH.setBoxWithBorderPosition(0, 0, 110, 190);
    buttonH.setBorderSize(1);
    buttonH.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    buttonH.setPosition(666, 0, 110, 190);
    keyboard.add(buttonH);

    buttonC_.setBoxWithBorderPosition(0, 0, 66, 106);
    buttonC_.setBorderSize(1);
    buttonC_.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(36, 36, 36), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    buttonC_.setPosition(78, 0, 66, 106);
    keyboard.add(buttonC_);

    buttonD_.setBoxWithBorderPosition(0, 0, 66, 106);
    buttonD_.setBorderSize(1);
    buttonD_.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(36, 36, 36), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    buttonD_.setPosition(188, 0, 66, 106);
    keyboard.add(buttonD_);

    buttonF_.setBoxWithBorderPosition(0, 0, 66, 106);
    buttonF_.setBorderSize(1);
    buttonF_.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(36, 36, 36), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    buttonF_.setPosition(411, 0, 66, 106);
    keyboard.add(buttonF_);

    buttonG_.setBoxWithBorderPosition(0, 0, 66, 106);
    buttonG_.setBorderSize(1);
    buttonG_.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(36, 36, 36), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    buttonG_.setPosition(522, 0, 66, 106);
    keyboard.add(buttonG_);

    buttonA_.setBoxWithBorderPosition(0, 0, 66, 106);
    buttonA_.setBorderSize(1);
    buttonA_.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(36, 36, 36), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0), touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    buttonA_.setPosition(632, 0, 66, 106);
    keyboard.add(buttonA_);

    add(box1);
    add(image1);
    add(buttonClose);
    add(textArea1);
    add(sliderVolume);
    add(sliderTone);
    add(buttonStart);
    add(buttonStop);
    add(textArea2);
    add(textArea3);
    add(keyboard);
}

void BUZZERViewBase::setupScreen()
{

}

void BUZZERViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonClose)
    {
        //Interaction1
        //When buttonClose clicked change screen to MAIN_MENU
        //Go to MAIN_MENU with no screen transition
        application().gotoMAIN_MENUScreenNoTransition();
    }
    else if (&src == &buttonStart)
    {
        //Interaction2
        //When buttonStart clicked call virtual function
        //Call startBuzzer
        startBuzzer();
    }
    else if (&src == &buttonStop)
    {
        //Interaction3
        //When buttonStop clicked call virtual function
        //Call stopBuzzer
        stopBuzzer();
    }
}

void BUZZERViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
}

void BUZZERViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &sliderVolume)
    {
        //Interaction4
        //When sliderVolume value changed call virtual function
        //Call updateVolume
        updateVolume(value);
    }
    else if (&src == &sliderTone)
    {
        //Interaction5
        //When sliderTone value changed call virtual function
        //Call updateTone
        updateTone(value);
    }
}
