/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/rgb_led_screen/RGB_LEDViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

RGB_LEDViewBase::RGB_LEDViewBase() :
    buttonCallback(this, &RGB_LEDViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &RGB_LEDViewBase::sliderValueChangedCallbackHandler)
{

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(78, 118, 135));

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_TOPBAR_TOPBAR_BG_800X480PX_ID));

    textArea5.setXY(15, 18);
    textArea5.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea5.setLinespacing(0);
    textArea5.setTypedText(touchgfx::TypedText(T_SINGLEUSEID27));

    sliderRED.setXY(59, 259);
    sliderRED.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_INDICATORS_SLIDER_ROUND_NOB_ID));
    sliderRED.setupHorizontalSlider(2, 19, 2, 0, 310);
    sliderRED.setValueRange(0, 31);
    sliderRED.setValue(0);
    sliderRED.setNewValueCallback(sliderValueChangedCallback);

    sliderGREEN.setXY(59, 323);
    sliderGREEN.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_INDICATORS_SLIDER_ROUND_NOB_ID));
    sliderGREEN.setupHorizontalSlider(2, 19, 2, 0, 310);
    sliderGREEN.setValueRange(0, 31);
    sliderGREEN.setValue(0);
    sliderGREEN.setNewValueCallback(sliderValueChangedCallback);

    sliderBLUE.setXY(59, 388);
    sliderBLUE.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_INDICATORS_SLIDER_ROUND_NOB_ID));
    sliderBLUE.setupHorizontalSlider(2, 19, 2, 0, 310);
    sliderBLUE.setValueRange(0, 31);
    sliderBLUE.setValue(0);
    sliderBLUE.setNewValueCallback(sliderValueChangedCallback);

    toggleButtonRED.setXY(554, 266);
    toggleButtonRED.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    toggleButtonRED.forceState(true);
    toggleButtonRED.setAction(buttonCallback);

    toggleButtonBLUE.setXY(554, 395);
    toggleButtonBLUE.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    toggleButtonBLUE.forceState(true);
    toggleButtonBLUE.setAction(buttonCallback);

    toggleButtonGREEN.setXY(554, 330);
    toggleButtonGREEN.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    toggleButtonGREEN.forceState(true);
    toggleButtonGREEN.setAction(buttonCallback);

    colorBox.setPosition(563, 104, 122, 110);
    colorBox.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    textAreaRGB.setXY(59, 104);
    textAreaRGB.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textAreaRGB.setLinespacing(0);
    textAreaRGB.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));

    buttonCloseRGB.setXY(740, 1);
    buttonCloseRGB.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_REMOVE_32_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_ADD_NEW_32_ID));
    buttonCloseRGB.setIconXY(16, 16);
    buttonCloseRGB.setAction(buttonCallback);

    add(box1);
    add(image1);
    add(textArea5);
    add(sliderRED);
    add(sliderGREEN);
    add(sliderBLUE);
    add(toggleButtonRED);
    add(toggleButtonBLUE);
    add(toggleButtonGREEN);
    add(colorBox);
    add(textAreaRGB);
    add(buttonCloseRGB);
}

void RGB_LEDViewBase::setupScreen()
{

}

void RGB_LEDViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButtonRED)
    {
        //Interaction3
        //When toggleButtonRED clicked call virtual function
        //Call setRedLEDState
        setRedLEDState();
    }
    else if (&src == &toggleButtonBLUE)
    {
        //Interaction5
        //When toggleButtonBLUE clicked call virtual function
        //Call setBlueLEDState
        setBlueLEDState();
    }
    else if (&src == &toggleButtonGREEN)
    {
        //Interaction4
        //When toggleButtonGREEN clicked call virtual function
        //Call setGreenLEDState
        setGreenLEDState();
    }
    else if (&src == &buttonCloseRGB)
    {
        //Interaction1
        //When buttonCloseRGB clicked change screen to MAIN_MENU
        //Go to MAIN_MENU with no screen transition
        application().gotoMAIN_MENUScreenNoTransition();
    }
}

void RGB_LEDViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &sliderRED)
    {
        //Interaction2
        //When sliderRED value changed call virtual function
        //Call setRedLEDValue
        setRedLEDValue(value);
    }
    else if (&src == &sliderGREEN)
    {
        //Interaction6
        //When sliderGREEN value changed call virtual function
        //Call setGreenLEDValue
        setGreenLEDValue(value);
    }
    else if (&src == &sliderBLUE)
    {
        //Interaction7
        //When sliderBLUE value changed call virtual function
        //Call setBlueLEDValue
        setBlueLEDValue(value);
    }
}
