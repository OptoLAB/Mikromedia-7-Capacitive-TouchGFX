/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_menu_screen/MAIN_MENUViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MAIN_MENUViewBase::MAIN_MENUViewBase() :
    flexButtonCallback(this, &MAIN_MENUViewBase::flexButtonCallbackHandler)
{

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_800X480PX_ID));

    box1.setPosition(429, 329, 140, 139);
    box1.setVisible(false);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(5, 58, 161));
    box1.setAlpha(106);

    flexButtonRGB.setBitmaps(Bitmap(BITMAP_RGBLED_ID), Bitmap(BITMAP_RGBLED_ID));
    flexButtonRGB.setBitmapXY(22, 10);
    flexButtonRGB.setText(TypedText(T_SINGLEUSEID35));
    flexButtonRGB.setTextPosition(0, 115, 140, 140);
    flexButtonRGB.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    flexButtonRGB.setPosition(49, 12, 140, 140);
    flexButtonRGB.setAction(flexButtonCallback);

    flexButtonLight.setBitmaps(Bitmap(BITMAP_LIGHTSENSORS_ID), Bitmap(BITMAP_LIGHTSENSORS_ID));
    flexButtonLight.setBitmapXY(22, 10);
    flexButtonLight.setText(TypedText(T_SINGLEUSEID36));
    flexButtonLight.setTextPosition(0, 115, 140, 140);
    flexButtonLight.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    flexButtonLight.setPosition(232, 12, 140, 140);
    flexButtonLight.setAction(flexButtonCallback);

    flexButtonGallery.setBitmaps(Bitmap(BITMAP_GALLERY2_ID), Bitmap(BITMAP_GALLERY2_ID));
    flexButtonGallery.setBitmapXY(22, 10);
    flexButtonGallery.setText(TypedText(T_SINGLEUSEID37));
    flexButtonGallery.setTextPosition(0, 115, 140, 140);
    flexButtonGallery.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    flexButtonGallery.setPosition(612, 12, 140, 140);
    flexButtonGallery.setAction(flexButtonCallback);

    flexButtonAccel.setBitmaps(Bitmap(BITMAP_ACCELEROMETER_ID), Bitmap(BITMAP_ACCELEROMETER_ID));
    flexButtonAccel.setBitmapXY(25, 10);
    flexButtonAccel.setText(TypedText(T_SINGLEUSEID38));
    flexButtonAccel.setTextPosition(0, 115, 147, 140);
    flexButtonAccel.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    flexButtonAccel.setPosition(422, 12, 147, 140);
    flexButtonAccel.setAction(flexButtonCallback);

    flexButtonMusic.setBitmaps(Bitmap(BITMAP_MUSIC_ID), Bitmap(BITMAP_MUSIC_ID));
    flexButtonMusic.setBitmapXY(22, 10);
    flexButtonMusic.setText(TypedText(T_SINGLEUSEID39));
    flexButtonMusic.setTextPosition(0, 115, 140, 140);
    flexButtonMusic.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    flexButtonMusic.setPosition(49, 170, 140, 140);
    flexButtonMusic.setAction(flexButtonCallback);

    flexButtonTemp.setBitmaps(Bitmap(BITMAP_TEMP_ID), Bitmap(BITMAP_TEMP_ID));
    flexButtonTemp.setBitmapXY(22, 10);
    flexButtonTemp.setText(TypedText(T_SINGLEUSEID470));
    flexButtonTemp.setTextPosition(0, 115, 140, 140);
    flexButtonTemp.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    flexButtonTemp.setPosition(232, 170, 140, 140);
    flexButtonTemp.setAction(flexButtonCallback);

    flexButtonPower.setBitmaps(Bitmap(BITMAP_POWER_ID), Bitmap(BITMAP_POWER_ID));
    flexButtonPower.setBitmapXY(22, 10);
    flexButtonPower.setText(TypedText(T_SINGLEUSEID479));
    flexButtonPower.setTextPosition(0, 115, 140, 140);
    flexButtonPower.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    flexButtonPower.setPosition(425, 170, 140, 140);
    flexButtonPower.setAction(flexButtonCallback);

    flexButtonTime.setBitmaps(Bitmap(BITMAP_CLOCK_ID), Bitmap(BITMAP_CLOCK_ID));
    flexButtonTime.setBitmapXY(22, 10);
    flexButtonTime.setText(TypedText(T_SINGLEUSEID494));
    flexButtonTime.setTextPosition(0, 115, 140, 140);
    flexButtonTime.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    flexButtonTime.setPosition(612, 170, 140, 140);
    flexButtonTime.setAction(flexButtonCallback);

    flexButtonBuzzer.setBitmaps(Bitmap(BITMAP_BUZZER_ID), Bitmap(BITMAP_BUZZER_ID));
    flexButtonBuzzer.setBitmapXY(22, 10);
    flexButtonBuzzer.setText(TypedText(T_SINGLEUSEID515));
    flexButtonBuzzer.setTextPosition(0, 115, 140, 140);
    flexButtonBuzzer.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    flexButtonBuzzer.setPosition(49, 329, 140, 140);
    flexButtonBuzzer.setAction(flexButtonCallback);

    flexButtonFlash.setBitmaps(Bitmap(BITMAP_FLASH_ID), Bitmap(BITMAP_FLASH_ID));
    flexButtonFlash.setBitmapXY(22, 10);
    flexButtonFlash.setText(TypedText(T_SINGLEUSEID519));
    flexButtonFlash.setTextPosition(0, 115, 140, 140);
    flexButtonFlash.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    flexButtonFlash.setPosition(232, 329, 140, 140);
    flexButtonFlash.setAction(flexButtonCallback);

    flexButtonRF.setBitmaps(Bitmap(BITMAP_RF_ID), Bitmap(BITMAP_RF_ID));
    flexButtonRF.setBitmapXY(22, 10);
    flexButtonRF.setText(TypedText(T_SINGLEUSEID535));
    flexButtonRF.setTextPosition(0, 115, 147, 140);
    flexButtonRF.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    flexButtonRF.setPosition(422, 329, 147, 140);
    flexButtonRF.setAction(flexButtonCallback);

    flexButtonWeather.setBitmaps(Bitmap(BITMAP_WEATHER_ID), Bitmap(BITMAP_WEATHER_ID));
    flexButtonWeather.setBitmapXY(22, 10);
    flexButtonWeather.setText(TypedText(T_SINGLEUSEID545));
    flexButtonWeather.setTextPosition(0, 115, 147, 140);
    flexButtonWeather.setTextColors(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255), touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    flexButtonWeather.setPosition(609, 329, 147, 140);
    flexButtonWeather.setAction(flexButtonCallback);

    add(image1);
    add(box1);
    add(flexButtonRGB);
    add(flexButtonLight);
    add(flexButtonGallery);
    add(flexButtonAccel);
    add(flexButtonMusic);
    add(flexButtonTemp);
    add(flexButtonPower);
    add(flexButtonTime);
    add(flexButtonBuzzer);
    add(flexButtonFlash);
    add(flexButtonRF);
    add(flexButtonWeather);
}

void MAIN_MENUViewBase::setupScreen()
{

}

void MAIN_MENUViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonRGB)
    {
        //RGB_LED_menu
        //When flexButtonRGB clicked change screen to RGB_LED
        //Go to RGB_LED with screen transition towards East
        application().gotoRGB_LEDScreenSlideTransitionEast();
    }
    else if (&src == &flexButtonLight)
    {
        //LIGHT_menu
        //When flexButtonLight clicked change screen to LIGHT
        //Go to LIGHT with screen transition towards East
        application().gotoLIGHTScreenSlideTransitionEast();
    }
    else if (&src == &flexButtonGallery)
    {
        //GALLERY_menu
        //When flexButtonGallery clicked change screen to GALLERY
        //Go to GALLERY with screen transition towards East
        application().gotoGALLERYScreenSlideTransitionEast();
    }
    else if (&src == &flexButtonAccel)
    {
        //ACCEL_menu
        //When flexButtonAccel clicked change screen to ACCEL
        //Go to ACCEL with screen transition towards East
        application().gotoACCELScreenSlideTransitionEast();
    }
    else if (&src == &flexButtonMusic)
    {
        //MUSIC_menu
        //When flexButtonMusic clicked change screen to MP3
        //Go to MP3 with screen transition towards East
        application().gotoMP3ScreenSlideTransitionEast();
    }
    else if (&src == &flexButtonTemp)
    {
        //TEMP_menu
        //When flexButtonTemp clicked change screen to TEMP
        //Go to TEMP with no screen transition
        application().gotoTEMPScreenNoTransition();
    }
    else if (&src == &flexButtonPower)
    {
        //PWR_menu
        //When flexButtonPower clicked change screen to PWR
        //Go to PWR with no screen transition
        application().gotoPWRScreenNoTransition();
    }
    else if (&src == &flexButtonTime)
    {
        //TIME_menu
        //When flexButtonTime clicked change screen to TIME
        //Go to TIME with no screen transition
        application().gotoTIMEScreenNoTransition();
    }
    else if (&src == &flexButtonBuzzer)
    {
        //BUZZER_menu
        //When flexButtonBuzzer clicked change screen to BUZZER
        //Go to BUZZER with no screen transition
        application().gotoBUZZERScreenNoTransition();
    }
    else if (&src == &flexButtonFlash)
    {
        //FLASH_menu
        //When flexButtonFlash clicked change screen to FLASH
        //Go to FLASH with no screen transition
        application().gotoFLASHScreenNoTransition();
    }
    else if (&src == &flexButtonRF)
    {
        //nRF_menu
        //When flexButtonRF clicked change screen to NRF
        //Go to NRF with no screen transition
        application().gotoNRFScreenNoTransition();
    }
    else if (&src == &flexButtonWeather)
    {
        //WEATHER_menu
        //When flexButtonWeather clicked change screen to WEATHER
        //Go to WEATHER with no screen transition
        application().gotoWEATHERScreenNoTransition();
    }
}
